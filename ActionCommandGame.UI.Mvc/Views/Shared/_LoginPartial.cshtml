@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> _signInManager
@inject UserManager<IdentityUser> _userManager

<ul class="navbar-nav">
    @if (_signInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Manage">Hello @User.Identity.Name!</a>
        </li>
        @if (User.IsInRole("Administrator"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Role" asp-action="Index">Roles</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Administrator" asp-controller="Home" asp-action="Index">Admin area</a>
            </li>
        }
        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new {area = ""})">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register" >Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>