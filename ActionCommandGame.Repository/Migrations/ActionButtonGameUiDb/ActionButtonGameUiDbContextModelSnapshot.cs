// <auto-generated />
using System;
using ActionCommandGame.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ActionCommandGame.Repository.Migrations.ActionButtonGameUiDb
{
    [DbContext(typeof(ActionButtonGameUiDbContext))]
    partial class ActionButtonGameUiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ActionCommandGame.Model.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ActionCooldownSeconds")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fuel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4846bbd1-7f20-4f2a-8591-fe0af5fafe62"),
                            ActionCooldownSeconds = 0,
                            Attack = 50,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Basic Pickaxe",
                            Price = 50
                        },
                        new
                        {
                            Id = new Guid("f2d28aaf-0db4-4152-8f4d-5e68626aebed"),
                            ActionCooldownSeconds = 0,
                            Attack = 300,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Enhanced Pick",
                            Price = 300
                        },
                        new
                        {
                            Id = new Guid("5d4e1f82-6659-426b-aef8-32e44e4c9880"),
                            ActionCooldownSeconds = 0,
                            Attack = 500,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Turbo Pick",
                            Price = 500
                        },
                        new
                        {
                            Id = new Guid("21abee98-561e-41a9-a92f-b158653a0593"),
                            ActionCooldownSeconds = 0,
                            Attack = 5000,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Mithril Warpick",
                            Price = 15000
                        },
                        new
                        {
                            Id = new Guid("b57b8368-ed3c-4990-947c-798b858f23ff"),
                            ActionCooldownSeconds = 0,
                            Attack = 50,
                            Defense = 0,
                            Fuel = 0,
                            Name = "Thor's Hammer",
                            Price = 1000000
                        },
                        new
                        {
                            Id = new Guid("44e08e68-2257-4fe2-80f7-eff9e726b704"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 20,
                            Fuel = 0,
                            Name = "Torn Clothes",
                            Price = 20
                        },
                        new
                        {
                            Id = new Guid("bf6c7638-cdbd-4dca-8cff-346207773769"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 150,
                            Fuel = 0,
                            Name = "Hardened Leather Gear",
                            Price = 200
                        },
                        new
                        {
                            Id = new Guid("da92e57a-ce50-44d8-9805-c384dd0de52d"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 500,
                            Fuel = 0,
                            Name = "Iron plated Armor",
                            Price = 1000
                        },
                        new
                        {
                            Id = new Guid("e44b349f-aeea-4b92-b5cc-9c697aa4598a"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 2000,
                            Fuel = 0,
                            Name = "Rock Shield",
                            Price = 10000
                        },
                        new
                        {
                            Id = new Guid("ce94dd35-c7bd-4c45-9bc1-21df4e647136"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 2000,
                            Fuel = 0,
                            Name = "Emerald Shield",
                            Price = 10000
                        },
                        new
                        {
                            Id = new Guid("52bd5012-5c88-41a5-b789-f630f0134cf1"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 20000,
                            Fuel = 0,
                            Name = "Diamond Shield",
                            Price = 10000
                        },
                        new
                        {
                            Id = new Guid("e5d5525b-9394-4687-9f38-32e2c6840010"),
                            ActionCooldownSeconds = 50,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 4,
                            Name = "Apple",
                            Price = 8
                        },
                        new
                        {
                            Id = new Guid("ef18d138-4396-415a-a164-3052cbc89f90"),
                            ActionCooldownSeconds = 45,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 5,
                            Name = "Energy Bar",
                            Price = 10
                        },
                        new
                        {
                            Id = new Guid("4c72f8d1-ff92-4e47-8498-686fbf53e476"),
                            ActionCooldownSeconds = 30,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 30,
                            Name = "Field Rations",
                            Price = 300
                        },
                        new
                        {
                            Id = new Guid("181bdb55-a2c0-4416-a222-94101e97a78d"),
                            ActionCooldownSeconds = 25,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 100,
                            Name = "Abbye cheese",
                            Price = 500
                        },
                        new
                        {
                            Id = new Guid("6abd5d22-aaad-465e-9b6b-7e2fc49c59dd"),
                            ActionCooldownSeconds = 25,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 100,
                            Name = "Abbye Beer",
                            Price = 500
                        },
                        new
                        {
                            Id = new Guid("738ab24b-2984-4d0a-bfc7-8bf30a881f75"),
                            ActionCooldownSeconds = 15,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 500,
                            Name = "Celestial Burrito",
                            Price = 10000
                        },
                        new
                        {
                            Id = new Guid("71857d8e-c0a2-4a9a-95df-772c5ee41fb2"),
                            ActionCooldownSeconds = 1,
                            Attack = 0,
                            Defense = 0,
                            Fuel = 1000,
                            Name = "Developer Food",
                            Price = 1
                        },
                        new
                        {
                            Id = new Guid("57154828-fbc2-4e7c-be69-f6837e370af4"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 0,
                            Description = "Does nothing. Do you feel special now?",
                            Fuel = 0,
                            Name = "Balloon",
                            Price = 10
                        },
                        new
                        {
                            Id = new Guid("4678281d-51fe-4ff9-a607-020e427b3df6"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 0,
                            Description = "For those who cannot afford the Crown of Flexing.",
                            Fuel = 0,
                            Name = "Blue Medal",
                            Price = 100000
                        },
                        new
                        {
                            Id = new Guid("989ee5c7-4314-4d5a-a98a-08fbb43b0f52"),
                            ActionCooldownSeconds = 0,
                            Attack = 0,
                            Defense = 0,
                            Description = "Yes, show everyone how much money you are willing to spend on something useless!",
                            Fuel = 0,
                            Name = "Crown of Flexing",
                            Price = 500000
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.NegativeGameEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DefenseLoss")
                        .HasColumnType("int");

                    b.Property<string>("DefenseWithGearDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefenseWithoutGearDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NegativeGameEvents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c34d4618-280b-4367-8ed4-e8b473685047"),
                            DefenseLoss = 2,
                            DefenseWithGearDescription = "Your mining gear allows you and your tools to escape unscathed",
                            DefenseWithoutGearDescription = "You try to cover your face but the rocks are too heavy. That hurt!",
                            Description = "As you are mining, the cave walls rumble and rocks tumble down on you",
                            Name = "Rockfall",
                            Probability = 100
                        },
                        new
                        {
                            Id = new Guid("058c9d61-9ece-4bdf-b72a-b77bbf944243"),
                            DefenseLoss = 3,
                            DefenseWithGearDescription = "It tries to bite you, but your mining gear keeps the rat's teeth from sinking in.",
                            DefenseWithoutGearDescription = "It tries to bite you and nicks you in the ankles. It already starts to glow dangerously.",
                            Description = "As you are mining, you feel something scurry between your feet!",
                            Name = "Cave Rat",
                            Probability = 50
                        },
                        new
                        {
                            Id = new Guid("d238ca22-caf7-496a-81a6-a6294132e0b6"),
                            DefenseLoss = 2,
                            DefenseWithGearDescription = "Your gear grants a safe landing, protecting you and your pickaxe.",
                            DefenseWithoutGearDescription = "You tumble down the dark hole and take a really bad landing. That hurt!",
                            Description = "As you are mining, the ground suddenly gives way and you fall down into a chasm!",
                            Name = "Sinkhole",
                            Probability = 100
                        },
                        new
                        {
                            Id = new Guid("fccdc4e6-b17b-43c6-b80d-70b8fa1919f4"),
                            DefenseLoss = 3,
                            DefenseWithGearDescription = "Your gear barely covers you from the noxious goop. You are safe.",
                            DefenseWithoutGearDescription = "The slime covers your hands and arms and starts biting through your flesh. This hurts!",
                            Description = "As you are mining, you uncover a green slime oozing from the cracks!",
                            Name = "Ancient Bacteria",
                            Probability = 50
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentAttackPlayerItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentDefensePlayerItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentFuelPlayerItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastActionExecutedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentAttackPlayerItemId");

                    b.HasIndex("CurrentDefensePlayerItemId");

                    b.HasIndex("CurrentFuelPlayerItemId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffcecb8b-6560-4621-987d-ab92c4b51f78"),
                            Experience = 0,
                            LastActionExecutedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Money = 0,
                            Name = "NewPlayer"
                        },
                        new
                        {
                            Id = new Guid("7b3d6d4d-f5b8-481e-b96a-54c282b0cbb6"),
                            Experience = 0,
                            LastActionExecutedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Money = 100,
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("a6d0165e-6750-41bb-ad92-1896b03a78db"),
                            Experience = 2000,
                            LastActionExecutedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Money = 100000,
                            Name = "John Francks"
                        },
                        new
                        {
                            Id = new Guid("7b876ee4-eb32-4ee3-bcca-fd08bc396bdc"),
                            Experience = 5,
                            LastActionExecutedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Money = 500,
                            Name = "Luc Doleman"
                        },
                        new
                        {
                            Id = new Guid("232a9fa8-4b27-4c77-91b7-81a13a95b198"),
                            Experience = 200,
                            LastActionExecutedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Money = 12345,
                            Name = "Emilio Fratilleci"
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.PlayerItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RemainingAttack")
                        .HasColumnType("int");

                    b.Property<int>("RemainingDefense")
                        .HasColumnType("int");

                    b.Property<int>("RemainingFuel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("ActionCommandGame.Model.PositiveGameEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PositiveGameEvents");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2eb8662f-8613-4a98-ad1d-fa09754b4bd4"),
                            Experience = 0,
                            Money = 0,
                            Name = "Nothing but boring rocks",
                            Probability = 1000
                        },
                        new
                        {
                            Id = new Guid("28d4a946-6b37-4524-9555-4f7a0bcc6650"),
                            Description = "It slips out of your hands and rolls inside a crack in the floor. It is out of reach.",
                            Experience = 0,
                            Money = 0,
                            Name = "The biggest Opal you ever saw.",
                            Probability = 500
                        },
                        new
                        {
                            Id = new Guid("5e8c8e26-f897-4ce1-85cc-bc7da758d2f3"),
                            Experience = 0,
                            Money = 0,
                            Name = "Sand, dirt and dust",
                            Probability = 1000
                        },
                        new
                        {
                            Id = new Guid("b57a8ab3-f8ed-460d-bd86-41303a9b38f0"),
                            Description = "You hold it to the light and warm it up to reveal secret texts, but it remains empty.",
                            Experience = 0,
                            Money = 0,
                            Name = "A piece of empty paper",
                            Probability = 1000
                        },
                        new
                        {
                            Id = new Guid("aa0fa264-97b2-4856-b504-553d329ae061"),
                            Description = "The water flows around your feet and creates a dirty puddle.",
                            Experience = 0,
                            Money = 0,
                            Name = "A small water stream",
                            Probability = 1000
                        },
                        new
                        {
                            Id = new Guid("2a903ab2-3917-4c86-87e6-8bf1118a30a6"),
                            Experience = 1,
                            Money = 1,
                            Name = "Junk",
                            Probability = 2000
                        },
                        new
                        {
                            Id = new Guid("51b720d8-78a9-449e-86ce-2c16418dc070"),
                            Experience = 1,
                            Money = 1,
                            Name = "Murphy's idea bin",
                            Probability = 300
                        },
                        new
                        {
                            Id = new Guid("3b931d7d-a739-4070-bf20-c6e67ded0d49"),
                            Experience = 1,
                            Money = 1,
                            Name = "Donald's book of excuses",
                            Probability = 300
                        },
                        new
                        {
                            Id = new Guid("4c24e24c-8331-4e5f-b6ad-b0ba658340fc"),
                            Experience = 1,
                            Money = 1,
                            Name = "Children's Treasure Map",
                            Probability = 300
                        },
                        new
                        {
                            Id = new Guid("8420d68c-ce58-4723-8898-4db58d5dda38"),
                            Experience = 3,
                            Money = 5,
                            Name = "Trinket",
                            Probability = 1000
                        },
                        new
                        {
                            Id = new Guid("20570d39-52f3-457f-98df-26ba4f94196e"),
                            Experience = 5,
                            Money = 10,
                            Name = "Old Tool",
                            Probability = 800
                        },
                        new
                        {
                            Id = new Guid("32fea2ac-6632-4d5b-bdd8-dd6444957dd7"),
                            Experience = 5,
                            Money = 10,
                            Name = "Old Equipment",
                            Probability = 800
                        },
                        new
                        {
                            Id = new Guid("951e36e9-a48f-47e0-9304-222942bde17a"),
                            Experience = 5,
                            Money = 10,
                            Name = "Ornate Shell",
                            Probability = 800
                        },
                        new
                        {
                            Id = new Guid("f52b2a1d-36b1-43a7-91ea-117cef3b6799"),
                            Experience = 6,
                            Money = 12,
                            Name = "Fossil",
                            Probability = 700
                        },
                        new
                        {
                            Id = new Guid("7e475bf3-7e1d-43cb-b476-226d5c9d6005"),
                            Experience = 8,
                            Money = 20,
                            Name = "Cave Shroom",
                            Probability = 650
                        },
                        new
                        {
                            Id = new Guid("a3c261be-9f70-4010-9fa5-32ead1b13629"),
                            Experience = 10,
                            Money = 30,
                            Name = "Artifact",
                            Probability = 500
                        },
                        new
                        {
                            Id = new Guid("bf4f169a-3b3d-425d-8c07-3c88b562a462"),
                            Experience = 13,
                            Money = 50,
                            Name = "Scrap Metal",
                            Probability = 400
                        },
                        new
                        {
                            Id = new Guid("d244bb71-34fc-4f39-8928-8b3a5dc2932c"),
                            Experience = 15,
                            Money = 60,
                            Name = "Jewelry",
                            Probability = 400
                        },
                        new
                        {
                            Id = new Guid("c600bd27-4505-41c2-a158-98a480f06084"),
                            Experience = 40,
                            Money = 100,
                            Name = "Peculiar Mask",
                            Probability = 350
                        },
                        new
                        {
                            Id = new Guid("d7636151-e58b-483f-ae46-034ded03516c"),
                            Experience = 50,
                            Money = 140,
                            Name = "Quartz Geode",
                            Probability = 300
                        },
                        new
                        {
                            Id = new Guid("061ff00b-e620-4b9a-bb3a-c3a6dc5834bc"),
                            Experience = 80,
                            Money = 160,
                            Name = "Ancient Weapon",
                            Probability = 300
                        },
                        new
                        {
                            Id = new Guid("c15a463c-9f09-4732-bf66-ca8f81d656a4"),
                            Experience = 80,
                            Money = 160,
                            Name = "Ancient Instrument",
                            Probability = 300
                        },
                        new
                        {
                            Id = new Guid("a947a9c5-9e4a-4e7b-b0f9-df7b55d1bad8"),
                            Experience = 80,
                            Money = 180,
                            Name = "Ancient Texts",
                            Probability = 300
                        },
                        new
                        {
                            Id = new Guid("7d0ef02c-7c1d-46fd-b41a-653836f404a1"),
                            Experience = 100,
                            Money = 300,
                            Name = "Gemstone",
                            Probability = 110
                        },
                        new
                        {
                            Id = new Guid("3f083ce5-34a5-411d-8898-da1736510a13"),
                            Experience = 100,
                            Money = 300,
                            Name = "Mysterious Potion",
                            Probability = 80
                        },
                        new
                        {
                            Id = new Guid("21457956-8ed2-4c13-9df1-35c2c6446ed1"),
                            Experience = 150,
                            Money = 400,
                            Name = "Meteorite",
                            Probability = 200
                        },
                        new
                        {
                            Id = new Guid("b343b62a-19c4-4919-9fdc-5a7ee02940e3"),
                            Experience = 150,
                            Money = 500,
                            Name = "Ancient Bust",
                            Probability = 150
                        },
                        new
                        {
                            Id = new Guid("332b38a4-59bb-4c24-89cb-fba6c04f6563"),
                            Experience = 200,
                            Money = 1000,
                            Name = "Buried Treasure",
                            Probability = 100
                        },
                        new
                        {
                            Id = new Guid("13e446b9-bbeb-4afe-b0f3-519561a0e4d9"),
                            Experience = 1500,
                            Money = 60000,
                            Name = "Alien DNA",
                            Probability = 5
                        },
                        new
                        {
                            Id = new Guid("45f60fc7-0ee8-45e8-be57-fbf700c638e8"),
                            Experience = 400,
                            Money = 3000,
                            Name = "Rare Collector's Item",
                            Probability = 30
                        },
                        new
                        {
                            Id = new Guid("779feab2-6b41-42a4-a1cc-63de6e684825"),
                            Experience = 350,
                            Money = 2000,
                            Name = "Pure Gold",
                            Probability = 30
                        },
                        new
                        {
                            Id = new Guid("d172e804-4856-4516-bd68-c631d802e96d"),
                            Experience = 1000,
                            Money = 20000,
                            Name = "Safe Deposit Box Key",
                            Probability = 10
                        },
                        new
                        {
                            Id = new Guid("6b388682-1128-4d8f-83f8-cd6a2e97e578"),
                            Experience = 1500,
                            Money = 30000,
                            Name = "Advanced Bio Tech",
                            Probability = 10
                        });
                });

            modelBuilder.Entity("ActionCommandGame.Model.Player", b =>
                {
                    b.HasOne("ActionCommandGame.Model.PlayerItem", "CurrentAttackPlayerItem")
                        .WithMany("AttackPlayers")
                        .HasForeignKey("CurrentAttackPlayerItemId");

                    b.HasOne("ActionCommandGame.Model.PlayerItem", "CurrentDefensePlayerItem")
                        .WithMany("DefensePlayers")
                        .HasForeignKey("CurrentDefensePlayerItemId");

                    b.HasOne("ActionCommandGame.Model.PlayerItem", "CurrentFuelPlayerItem")
                        .WithMany("FuelPlayers")
                        .HasForeignKey("CurrentFuelPlayerItemId");

                    b.Navigation("CurrentAttackPlayerItem");

                    b.Navigation("CurrentDefensePlayerItem");

                    b.Navigation("CurrentFuelPlayerItem");
                });

            modelBuilder.Entity("ActionCommandGame.Model.PlayerItem", b =>
                {
                    b.HasOne("ActionCommandGame.Model.Item", "Item")
                        .WithMany("PlayerItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ActionCommandGame.Model.Player", "Player")
                        .WithMany("Inventory")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ActionCommandGame.Model.Item", b =>
                {
                    b.Navigation("PlayerItems");
                });

            modelBuilder.Entity("ActionCommandGame.Model.Player", b =>
                {
                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("ActionCommandGame.Model.PlayerItem", b =>
                {
                    b.Navigation("AttackPlayers");

                    b.Navigation("DefensePlayers");

                    b.Navigation("FuelPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
